<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" fill="#37c99e" xmlns:v="https://vecta.io/nano"><path d="M56.59 30.85h-34.4a2.59 2.59 0 0 0-2.58 2.58v22.36a2.58 2.58 0 0 0 2.58 2.58h34.4a2.58 2.58 0 0 0 2.58-2.58V33.43a2.59 2.59 0 0 0-2.58-2.58zM55.4 53.39a.86.86 0 0 1 .17 1.21.85.85 0 0 1-1.2.17l-11.63-9L41 47.05a2.58 2.58 0 0 1-3.16 0l-1.77-1.35-11.63 9a.87.87 0 0 1-1.21-.12.86.86 0 0 1 .12-1.21l11.29-8.78-11.26-8.76a.86.86 0 0 1-.18-1.2.87.87 0 0 1 1.21-.18l14.45 11.24a.87.87 0 0 0 1.06 0l14.42-11.22a.86.86 0 0 1 1.09 1.34l-11.32 8.8z" opacity=".2"/><path d="M33.31 34.66a.29.29 0 0 1-.29-.29V23.06a12.44 12.44 0 0 0-9.77-12.14 3.32 3.32 0 1 0-5.33 0 12.44 12.44 0 0 0-9.77 12.14v11.31a.29.29 0 0 1-.3.29 3 3 0 0 0-3 2.61 2.89 2.89 0 0 0 2.59 3.18h8.24a5 5 0 0 0 9.8 0h8a2.9 2.9 0 0 0 2.9-2.9 2.71 2.71 0 0 0 0-.29 3 3 0 0 0-3.07-2.6zM18.92 9a1.66 1.66 0 1 1 1.66 1.66A1.66 1.66 0 0 1 18.92 9zm1.66 34a3.31 3.31 0 0 1-3.2-2.49h6.4a3.31 3.31 0 0 1-3.2 2.49zm13.77-4.6a1.23 1.23 0 0 1-.92.41H7.73a1.25 1.25 0 0 1-1.24-1.25.62.62 0 0 1 0-.13 1.31 1.31 0 0 1 1.35-1.11 2 2 0 0 0 2-2V23.06a10.78 10.78 0 1 1 21.55 0v11.31a2 2 0 0 0 2 2 1.33 1.33 0 0 1 1.36 1.11 1.25 1.25 0 0 1-.4.92zm-5.48-3.74H12.29a.83.83 0 1 0 0 1.66h16.58a.83.83 0 0 0 0-1.66z"/><!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>