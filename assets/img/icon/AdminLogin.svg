<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" xmlns:v="https://vecta.io/nano"><style>.A{isolation:isolate}</style><g opacity=".2" fill="#0083ff"><path class="A" d="M49.67 57.17h-3.49v-4.55H34.55v4.55h-3.49a1.17 1.17 0 1 0-.14 2.33h18.75a1.17 1.17 0 1 0 .14-2.33z"/><path class="A" d="M56.73 25H24a3.49 3.49 0 0 0-3.49 3.49v20.97A3.49 3.49 0 0 0 24 53h32.72a3.49 3.49 0 0 0 3.49-3.49V28.52A3.48 3.48 0 0 0 56.73 25zm-8.22 15.15a8.08 8.08 0 0 1-2.24 5.59c-1.25-2-3.42 1.39-5.91 1.39s-4.65-3.34-5.89-1.39a8 8 0 0 1-2.25-5.59v-2.32a8.14 8.14 0 0 1 16.28 0z"/><path d="M40.36 41.31a3.5 3.5 0 1 1 3.49-3.5 3.49 3.49 0 0 1-3.49 3.5zm5.92 4.42a8.11 8.11 0 0 1-5.92 2.56 8 8 0 0 1-5.89-2.56 7 7 0 0 1 9.62-2.19 7.15 7.15 0 0 1 2.19 2.19z"/></g><path d="M30 18.64h-2.76v-6.19a8.12 8.12 0 0 0-16.24 0v6.19H8.3a4.51 4.51 0 0 0-4.51 4.51v15.33A4.52 4.52 0 0 0 8.3 43H30a4.52 4.52 0 0 0 4.51-4.52V23.15A4.51 4.51 0 0 0 30 18.64zm-16-6.19a5.11 5.11 0 0 1 10.22 0v6.19H14v-6.19zm17.44 26A1.51 1.51 0 0 1 30 40H8.3a1.52 1.52 0 0 1-1.51-1.51V23.15a1.52 1.52 0 0 1 1.51-1.51H30a1.51 1.51 0 0 1 1.5 1.51zM19.12 26a2.79 2.79 0 0 0-2.78 2.79 2.76 2.76 0 0 0 1.28 2.33v3.3a1.5 1.5 0 1 0 3 0v-3.29a2.79 2.79 0 0 0-1.5-5.13z" fill="#0083ff"/><!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>